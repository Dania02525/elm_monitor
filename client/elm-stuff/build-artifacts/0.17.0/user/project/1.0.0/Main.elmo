var _user$project$Main$responseStat = A2(
	_elm_lang$core$Json_Decode$at,
	_elm_lang$core$Native_List.fromArray(
		['payload', 'stat']),
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$parseResponse = function (str) {
	var stat = A2(
		_elm_lang$core$Result$withDefault,
		'0',
		A2(_elm_lang$core$Json_Decode$decodeString, _user$project$Main$responseStat, str));
	return A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toFloat(stat));
};
var _user$project$Main$joinPayload = function () {
	var object = _elm_lang$core$Json_Encode$object(
		_elm_lang$core$Native_List.fromArray(
			[
				{
				ctor: '_Tuple2',
				_0: 'topic',
				_1: _elm_lang$core$Json_Encode$string('monitor:memory')
			},
				{
				ctor: '_Tuple2',
				_0: 'event',
				_1: _elm_lang$core$Json_Encode$string('phx_join')
			},
				{
				ctor: '_Tuple2',
				_0: 'payload',
				_1: _elm_lang$core$Json_Encode$string('')
			},
				{
				ctor: '_Tuple2',
				_0: 'ref',
				_1: _elm_lang$core$Json_Encode$string('')
			}
			]));
	return A2(_elm_lang$core$Json_Encode$encode, 0, object);
}();
var _user$project$Main$pushStat = F2(
	function (str, arr) {
		var stat = _user$project$Main$parseResponse(str);
		return A2(
			_elm_lang$core$List$take,
			30,
			A2(_elm_lang$core$List_ops['::'], stat, arr));
	});
var _user$project$Main$viewStat = function (msg) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(msg))
			]));
};
var _user$project$Main$echoServer = 'ws://localhost:4000/socket/websocket';
var _user$project$Main$Model = function (a) {
	return {stats: a};
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$Model(
		_elm_lang$core$Native_List.fromArray(
			[])),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$update = F2(
	function (msg, _p0) {
		var _p1 = _p0;
		var _p3 = _p1.stats;
		var _p2 = msg;
		if (_p2.ctor === 'NewStat') {
			return {
				ctor: '_Tuple2',
				_0: _user$project$Main$Model(
					A2(_user$project$Main$pushStat, _p2._0, _p3)),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _user$project$Main$Model(_p3),
				_1: A2(_elm_lang$websocket$WebSocket$send, _user$project$Main$echoServer, _user$project$Main$joinPayload)
			};
		}
	});
var _user$project$Main$Subscribe = {ctor: 'Subscribe'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Subscribe)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Subscribe to Data Feed')
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				A2(_elm_lang$core$List$map, _user$project$Main$viewStat, model.stats))
			]));
};
var _user$project$Main$NewStat = function (a) {
	return {ctor: 'NewStat', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$websocket$WebSocket$listen, _user$project$Main$echoServer, _user$project$Main$NewStat);
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
